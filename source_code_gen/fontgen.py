notice ="""
        Font Generator Program
 -----------------------------------
| Copyright 2022 by Joel C. Alcarez |
| [joelalcarez1975@gmail.com]       |
|-----------------------------------|
|    We make absolutely no warranty |
| of any kind, expressed or implied |
|-----------------------------------|
|   Contact primary author          |
|   if you plan to use this         |
|   in a commercial product at      |
|   joelalcarez1975@gmail.com       |
 -----------------------------------
"""

def get8x8charpatterns() -> dict:#add characters as needed some ascii chars not present 
    return {' ':[0,0,0,0,0,0,0,0],
       '0':[0x7C,0xC6,0xCE,0xDE,0xF6,0xE6,0x7C,0x00],
       '1':[0x30,0x70,0x30,0x30,0x30,0x30,0xFC,0x00],
       '2':[0x78,0xCC,0x0C,0x38,0x60,0xCC,0xFC,0x00],
       '3':[0x78,0xCC,0x0C,0x38,0x0C,0xCC,0x78,0x00],
       '4':[0x1C,0x3C,0x6C,0xCC,0xFE,0x0C,0x1E,0x00],
       '5':[0xFC,0xC0,0xF8,0x0C,0x0C,0xCC,0x78,0x00],
       '6':[0x38,0x60,0xC0,0xF8,0xCC,0xCC,0x78,0x00],
       '7':[0xFC,0xCC,0x0C,0x18,0x30,0x30,0x30,0x00],
       '8':[0x78,0xCC,0xCC,0x78,0xCC,0xCC,0x78,0x00],
       '9':[0x78,0xCC,0xCC,0x7C,0x0C,0x18,0x70,0x00],
       'A':[0x30,0x78,0xCC,0xCC,0xFC,0xCC,0xCC,0x00],
       'B':[0xFC,0x66,0x66,0x7C,0x66,0x66,0xFC,0x00],
       'C':[0x3C,0x66,0xC0,0xC0,0x66,0x66,0x3C,0x00],
       'D':[0xF8,0x6C,0x66,0x66,0x66,0x6C,0xF8,0x00],
       'E':[0xFE,0x62,0x68,0x78,0x68,0x62,0xFE,0x00],
       'F':[0xFE,0x62,0x68,0x78,0x68,0x60,0xF0,0x00],
       'G':[0x3C,0x66,0xC0,0xC0,0xCE,0x66,0x3E,0x00],
       'H':[0xCC,0xCC,0xCC,0xFC,0xCC,0xCC,0xCC,0x00],
       'I':[0x78,0x30,0x30,0x30,0x30,0x30,0x78,0x00],
       'J':[0x1E,0x0C,0x0C,0x0C,0xCC,0xCC,0x78,0x00],
       'K':[0xE6,0x66,0x6C,0x78,0x6C,0x66,0xE6,0x00],
       'L':[0xF0,0x60,0x60,0x60,0x62,0x66,0xFE,0x00],
       'M':[0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0x00],
       'N':[0xC6,0xE6,0xF6,0xDE,0xCE,0xC6,0xC6,0x00],
       'O':[0x38,0x6C,0xC6,0xC6,0xC6,0x6C,0x38,0x00],
       'P':[0xFC,0x66,0x66,0x7C,0x60,0x60,0xF0,0x00],
       'Q':[0x78,0xCC,0xCC,0xCC,0xDC,0x78,0x1C,0x00],
       'R':[0xFC,0x66,0x66,0x7C,0x6C,0x66,0xE6,0x00],
       'S':[0x78,0xCC,0xE0,0x70,0x1C,0xCC,0x78,0x00],
       'T':[0xFC,0xB4,0x30,0x30,0x30,0x30,0x78,0x00],
       'U':[0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0x7C,0x00],
       'V':[0xCC,0xCC,0xCC,0xCC,0xCC,0x78,0x30,0x00],
       'W':[0xC6,0xC6,0xC6,0xD6,0xFE,0xEE,0xC6,0x00],
       'X':[0xC6,0xC6,0x6C,0x38,0x38,0x6C,0xC6,0x00],
       'Y':[0xCC,0xCC,0xCC,0x78,0x30,0x30,0x78,0x00],
       'Z':[0xFE,0xC6,0x8C,0x18,0x32,0x66,0xFE,0x00],
       'a':[0x00,0x00,0x78,0x0C,0x7C,0xCC,0x76,0x00],
       'b':[0xE0,0x60,0x60,0x7C,0x66,0x66,0xDC,0x00],
       'c':[0x00,0x00,0x78,0xCC,0xC0,0xCC,0x78,0x00],
       'd':[0x1C,0x0C,0x0C,0x7C,0xCC,0xCC,0x76,0x00],
       'e':[0x00,0x00,0x78,0xCC,0xFC,0xC0,0x78,0x00],
       'f':[0x38,0x6C,0x60,0xF0,0x60,0x60,0xF0,0x00],
       'g':[0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0xF8],
       'h':[0xE0,0x60,0x6C,0x76,0x66,0x66,0xE6,0x00],
       'i':[0x30,0x00,0x70,0x30,0x30,0x30,0x78,0x00],
       'j':[0x0C,0x00,0x0C,0x0C,0x0C,0xCC,0xCC,0x78],
       'k':[0xE0,0x60,0x66,0x6C,0x78,0x6C,0xE6,0x00],
       'l':[0x70,0x30,0x30,0x30,0x30,0x30,0x78,0x00],
       'm':[0x00,0x00,0xCC,0xFE,0xFE,0xD6,0xC6,0x00],
       'n':[0x00,0x00,0xF8,0xCC,0xCC,0xCC,0xCC,0x00],
       'o':[0x00,0x00,0x78,0xCC,0xCC,0xCC,0x78,0x00],
       'p':[0x00,0x00,0xDC,0x66,0x66,0x7C,0x60,0xF0],
       'q':[0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0x1E],
       'r':[0x00,0x00,0xDC,0x76,0x66,0x60,0xF0,0x00],
       's':[0x00,0x00,0x7C,0xC0,0x78,0x0C,0xF8,0x00],
       't':[0x10,0x30,0x7C,0x30,0x30,0x34,0x18,0x00],
       'u':[0x00,0x00,0xCC,0xCC,0xCC,0xCC,0x76,0x00],
       'v':[0x00,0x00,0xCC,0xCC,0xCC,0x78,0x30,0x00],
       'w':[0x00,0x00,0xC6,0xD6,0xFE,0xFE,0x6C,0x00],
       'x':[0x00,0x00,0xC6,0x6C,0x38,0x6C,0xC6,0x00],
       'y':[0x00,0x00,0xCC,0xCC,0xCC,0x7C,0x0C,0xF8],
       'z':[0x00,0x00,0xFC,0x98,0x30,0x64,0xFC,0x00],
       '<':[0x18,0x30,0x60,0xC0,0x60,0x30,0x18,0x00],
       '>':[0x60,0x30,0x18,0x0C,0x18,0x30,0x60,0x00],
       "(":[0x18,0x30,0x60,0x60,0x60,0x30,0x18,0x00],
       ")":[0x60,0x30,0x18,0x18,0x18,0x30,0x60,0x00],
       '[':[0x78,0x60,0x60,0x60,0x60,0x60,0x78,0x00],
       ']':[0x78,0x18,0x18,0x18,0x18,0x18,0x78,0x00],
       '{':[0x1C,0x30,0x30,0xE0,0x30,0x30,0x1C,0x00],
       '}':[0xE0,0x30,0x30,0x1C,0x30,0x30,0xE0,0x00],
       '.':[0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00],
       ",":[0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x60],
       '!':[0x30,0x78,0x78,0x30,0x30,0x00,0x30,0x00],
       '?':[0x78,0xCC,0x0C,0x18,0x30,0x00,0x30,0x00],
       ':':[0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x00],
       ';':[0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x60],
       '"':[0x6C,0x6C,0x6C,0x00,0x00,0x00,0x00,0x00],
       "'":[0x60,0x60,0xC0,0x00,0x00,0x00,0x00,0x00],
       '`':[0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00],
       '#':[0x6C,0x6C,0xFE,0x6C,0xFE,0x6C,0x6C,0x00],
       '%':[0x00,0xC6,0xCC,0x18,0x30,0x66,0xC6,0x00],
       '$':[0x30,0x7C,0xC0,0x78,0x0C,0xF8,0x30,0x00],
       '&':[0x38,0x6C,0x38,0x76,0xDC,0xCC,0x76,0x00],
       '@':[0x7C,0xC6,0xDE,0xDE,0xDE,0xC0,0x78,0x00],
       "*":[0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00],
       "+":[0x00,0x30,0x30,0xFC,0x30,0x30,0x00,0x00],
       '-':[0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00],
       '/':[0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00],
       '\\':[0xC0,0x60,0x30,0x18,0x0C,0x06,0x02,0x00],
       '=':[0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00],
       '^':[0x10,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00],
       '_':[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF],
       '|':[0x18,0x18,0x18,0x00,0x18,0x18,0x18,0x00],
       '~':[0x76,0xDC,0x00,0x00,0x00,0x00,0x00,0x00]
       }


def get8x14charpatterns() -> dict:#add characters as needed some ascii chars not present 
    return {' ':[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       '!':[0x00,0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x00,0x00,0x18,0x00,0x00,0x00],
       '"':[0x00,0x66,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
       '#':[0x00,0x00,0x6C,0x6C,0xFE,0x6C,0x6C,0x6C,0xFE,0x6C,0x6C,0x00,0x00,0x00],
       '$':[0x00,0x10,0x7C,0xD6,0xD0,0xD0,0x7C,0x16,0x16,0xD6,0x7C,0x10,0x00,0x00],
       '%':[0x00,0x00,0x00,0x00,0xC2,0xC4,0x08,0x10,0x20,0x46,0x86,0x00,0x00,0x00],
       '&':[0x00,0x00,0x38,0x6C,0x6C,0x38,0x76,0xDC,0xCC,0xCC,0x76,0x00,0x00,0x00],
       "'":[0x00,0x30,0x30,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
       '(':[0x00,0x00,0x0C,0x18,0x30,0x30,0x30,0x30,0x30,0x18,0x0C,0x00,0x00,0x00],
       ')':[0x00,0x00,0x30,0x18,0x0C,0x0C,0x0C,0x0C,0x0C,0x18,0x30,0x00,0x00,0x00],
       '*':[0x00,0x00,0x00,0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00,0x00,0x00,0x00],
       '+':[0x00,0x00,0x00,0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00,0x00,0x00,0x00],
       ',':[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x18,0x30,0x00,0x00],
       '-':[0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
       '.':[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00],
       '/':[0x00,0x00,0x02,0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00,0x00,0x00,0x00],
       '0':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xD6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       '1':[0x00,0x00,0x18,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x7E,0x00,0x00,0x00],
       '2':[0x00,0x00,0x7C,0xC6,0x06,0x0C,0x18,0x30,0x60,0xC0,0xFE,0x00,0x00,0x00],
       '3':[0x00,0x00,0x7C,0xC6,0x06,0x06,0x3C,0x06,0x06,0xC6,0x7C,0x00,0x00,0x00],
       '4':[0x00,0x00,0x0C,0x1C,0x3C,0x6C,0xCC,0xFE,0x0C,0x0C,0x0C,0x00,0x00,0x00],
       '5':[0x00,0x00,0xFE,0xC0,0xC0,0xC0,0xFC,0x06,0x06,0xC6,0x7C,0x00,0x00,0x00],
       '6':[0x00,0x00,0x3C,0x60,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0x7E,0x00,0x00,0x00],
       '7':[0x00,0x00,0xFE,0x06,0x06,0x0C,0x18,0x30,0x30,0x30,0x30,0x00,0x00,0x00],
       '8':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0x7C,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       '9':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x0C,0x78,0x00,0x00,0x00],
       ':':[0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00],
       ';':[0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x18,0x18,0x30,0x00,0x00,0x00],
       '<':[0x00,0x00,0x06,0x0C,0x18,0x30,0x60,0x30,0x18,0x0C,0x06,0x00,0x00,0x00],
       '=':[0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00],
       '>':[0x00,0x00,0x60,0x30,0x18,0x0C,0x06,0x0C,0x18,0x30,0x60,0x00,0x00,0x00],
       '?':[0x00,0x00,0x7C,0xC6,0x06,0x0C,0x18,0x18,0x18,0x00,0x00,0x18,0x00,0x00],
       '@':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xDE,0xDE,0xDE,0xC0,0x7C,0x00,0x00,0x00],
       'A':[0x00,0x00,0x10,0x38,0x6C,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'B':[0x00,0x00,0xFC,0xC6,0xC6,0xC6,0xFC,0xC6,0xC6,0xC6,0xFC,0x00,0x00,0x00],
       'C':[0x00,0x00,0x3C,0x66,0xC0,0xC0,0xC0,0xC0,0xC0,0x66,0x3C,0x00,0x00,0x00],
       'D':[0x00,0x00,0xF8,0xCC,0xC6,0xC6,0xC6,0xC6,0xC6,0xCC,0xF8,0x00,0x00,0x00],
       'E':[0x00,0x00,0xFE,0xC0,0xC0,0xC0,0xFC,0xC0,0xC0,0xC0,0xFE,0x00,0x00,0x00],
       'F':[0x00,0x00,0xFE,0xC0,0xC0,0xC0,0xFC,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00],
       'G':[0x00,0x00,0x3C,0x66,0xC0,0xC0,0xC0,0xCE,0xC6,0x66,0x3C,0x00,0x00,0x00],
       'H':[0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'I':[0x00,0x00,0x3C,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00],
       'J':[0x00,0x00,0x1E,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x78,0x00,0x00,0x00],
       'K':[0x00,0x00,0xC6,0xCC,0xD8,0xF0,0xE0,0xF0,0xD8,0xCC,0xC6,0x00,0x00,0x00],
       'L':[0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xFE,0x00,0x00,0x00],
       'M':[0x00,0x00,0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'N':[0x00,0x00,0xC6,0xE6,0xF6,0xFE,0xDE,0xCE,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'O':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       'P':[0x00,0x00,0xFC,0xC6,0xC6,0xC6,0xFC,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00],
       'Q':[0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0xD6,0xCC,0x7A,0x00,0x00,0x00],
       'R':[0x00,0x00,0xFC,0xC6,0xC6,0xC6,0xFC,0xD8,0xCC,0xC6,0xC6,0x00,0x00,0x00],
       'S':[0x00,0x00,0x7C,0xC6,0xC0,0x60,0x38,0x0C,0x06,0xC6,0x7C,0x00,0x00,0x00],
       'T':[0x00,0x00,0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00,0x00,0x00],
       'U':[0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       'V':[0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x6C,0x38,0x10,0x00,0x00,0x00],
       'W':[0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xD6,0xD6,0xFE,0xEE,0xC6,0x00,0x00,0x00],
       'X':[0x00,0x00,0xC6,0xC6,0x6C,0x38,0x10,0x38,0x6C,0xC6,0xC6,0x00,0x00,0x00],
       'Y':[0x00,0x00,0x66,0x66,0x66,0x66,0x3C,0x18,0x18,0x18,0x18,0x00,0x00,0x00],
       'Z':[0x00,0x00,0xFE,0x06,0x0C,0x18,0x30,0x60,0xC0,0xC0,0xFE,0x00,0x00,0x00],
       '[':[0x00,0x00,0x3C,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3C,0x00,0x00,0x00],
       '\\':[0x00,0x00,0x00,0x80,0xC0,0x60,0x30,0x18,0x0C,0x06,0x02,0x00,0x00,0x00],
       ']':[0x00,0x00,0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00,0x00,0x00],
       '^':[0x10,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
       '_':[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x00],
       '`':[0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
       'a':[0x00,0x00,0x00,0x00,0x00,0x7C,0x06,0x7E,0xC6,0xC6,0x7E,0x00,0x00,0x00],
       'b':[0x00,0x00,0xC0,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0xC6,0xFC,0x00,0x00,0x00],
       'c':[0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xC0,0xC0,0xC6,0x7C,0x00,0x00,0x00],
       'd':[0x00,0x00,0x06,0x06,0x06,0x7E,0xC6,0xC6,0xC6,0xC6,0x7E,0x00,0x00,0x00],
       'e':[0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xFE,0xC0,0xC6,0x7C,0x00,0x00,0x00],
       'f':[0x00,0x00,0x3C,0x66,0x60,0x60,0xF0,0x60,0x60,0x60,0x60,0x00,0x00,0x00],
       'g':[0x00,0x00,0x00,0x00,0x00,0x7E,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x06,0x7C],
       'h':[0x00,0x00,0xC0,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'i':[0x00,0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x18,0x18,0x18,0x00,0x00,0x00],
       'j':[0x00,0x00,0x06,0x06,0x00,0x00,0x06,0x06,0x06,0x06,0x06,0x06,0xC6,0x7C],
       'k':[0x00,0x00,0xC0,0xC0,0xC0,0xCC,0xD8,0xF0,0xD8,0xCC,0xC6,0x00,0x00,0x00],
       'l':[0x00,0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00],
       'm':[0x00,0x00,0x00,0x00,0x00,0xEC,0xD6,0xD6,0xD6,0xD6,0xC6,0x00,0x00,0x00],
       'n':[0x00,0x00,0x00,0x00,0x00,0xFC,0xC6,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00],
       'o':[0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       'p':[0x00,0x00,0x00,0x00,0x00,0xFC,0xC6,0xC6,0xC6,0xC6,0xFC,0xC0,0xC0,0xC0],
       'q':[0x00,0x00,0x00,0x00,0x00,0x7E,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x06],
       'r':[0x00,0x00,0x00,0x00,0x00,0xFC,0xC6,0xC0,0xC0,0xC0,0XC0,0x00,0x00,0x00],
       's':[0x00,0x00,0x00,0x00,0x00,0x7C,0xC0,0x70,0x1C,0x06,0x7C,0x00,0x00,0x00],
       't':[0x00,0x00,0x30,0x30,0xFC,0x30,0x30,0x30,0x30,0x30,0x1C,0x00,0x00,0x00],
       'u':[0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00],
       'v':[0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xC6,0x6C,0x38,0x10,0x00,0x00,0x00],
       'w':[0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xD6,0xD6,0xFE,0xC6,0x00,0x00,0x00],
       'x':[0x00,0x00,0x00,0x00,0x00,0xC6,0x6C,0x38,0x38,0x6C,0xC6,0x00,0x00,0x00],
       'y':[0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x7C],
       'z':[0x00,0x00,0x00,0x00,0x00,0xFE,0x0C,0x18,0x30,0x60,0xFE,0x00,0x00,0x00],
       '{':[0x00,0x00,0x0E,0x18,0x18,0x18,0x60,0x18,0x18,0x18,0x0E,0x00,0x00,0x00],
       '|':[0x00,0x00,0x18,0x18,0x18,0X18,0x00,0x18,0x18,0x18,0x18,0x00,0x00,0x00],
       '}':[0x00,0x00,0x70,0x18,0x18,0X18,0x06,0x18,0x18,0x18,0x70,0x00,0x00,0x00],
       '~':[0x76,0xDC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]
       }

def makecharbuf(
        chardict: dict) -> list:
    charlen = len(chardict['0'])
    b = [charlen]
    blankchar = [0 for _ in range(charlen)]
    for i in range(256):
        c = chardict.get(chr(i), blankchar)
        b += c
    return b


def main():
    print(notice)
    print(makecharbuf(
        get8x8charpatterns()))
    print(makecharbuf(
        get8x14charpatterns()))


if __name__ == "__main__":
    main()
